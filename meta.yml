---
fullname: Stable sort algorithms in Rocq
shortname: stablesort
organization: pi8027
action: true
dune: false

synopsis: >-
  Stable sort algorithms and their stability proofs in Rocq

description: |-
  This library provides a characterization of stable mergesort functions using
  relational parametricity, and deduces several functional correctness results,
  including stability, solely from the characteristic property. This library
  allows the users to prove their mergesort correct just by proving that the
  mergesort in question satisfies the characteristic property. The functional
  correctness lemmas are overloaded using a canonical structure
  (`StableSort.function`) that bundles the characteristic property, and
  automatically apply to any declared instance of this structure.

  As instances of the characteristic property, this library provides two kinds
  of optimized mergesorts.
  The first kind is non-tail-recursive mergesort. In call-by-need evaluation,
  they compute the first k smallest elements of a list of length n in
  O(n + k log k) time, which is known to be the optimal time complexity of the
  partial and incremental sorting problems. However, the non-tail-recursive
  merge function linearly consumes the call stack and triggers a stack overflow
  in call-by-value evaluation.
  The second kind is tail-recursive mergesorts and thus solves the above issue
  in call-by-value evaluation. However, it does not allow us to compute the
  output incrementally regardless of the evaluation strategy.
  In addition, each of the above two kinds of mergesort functions has a smooth
  (also called natural) variant of mergesort, which takes advantage of sorted
  slices in the input.

publications:
- pub_url: https://arxiv.org/abs/2403.08173
  pub_title: A bargain for mergesorts â€” How to prove your mergesort correct and stable, almost for free
  pub_doi: 10.48550/arXiv.2403.08173

authors:
- name: Kazuhiko Sakaguchi
  initial: true
- name: Cyril Cohen
  initial: false

opam-file-maintainer: kazuhiko.sakaguchi@ens-lyon.fr

license:
  fullname: CeCILL-B Free Software License Agreement
  identifier: CECILL-B
  file: CeCILL-B

supported_coq_versions:
  text: 8.13 or later
  opam: '{>= "8.13"}'

tested_coq_nix_versions:

tested_coq_opam_versions:
- version: '1.13.0-coq-8.13'
  repo: 'mathcomp/mathcomp'
- version: '1.13.0-coq-8.14'
  repo: 'mathcomp/mathcomp'
- version: '1.13.0-coq-8.15'
  repo: 'mathcomp/mathcomp'
- version: '1.14.0-coq-8.13'
  repo: 'mathcomp/mathcomp'
- version: '1.14.0-coq-8.14'
  repo: 'mathcomp/mathcomp'
- version: '1.14.0-coq-8.15'
  repo: 'mathcomp/mathcomp'
- version: '1.15.0-coq-8.13'
  repo: 'mathcomp/mathcomp'
- version: '1.15.0-coq-8.14'
  repo: 'mathcomp/mathcomp'
- version: '1.15.0-coq-8.15'
  repo: 'mathcomp/mathcomp'
- version: '1.15.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.13'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.14'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.15'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '1.16.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '1.17.0-coq-8.15'
  repo: 'mathcomp/mathcomp'
- version: '1.17.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '1.17.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '1.17.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '1.18.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '1.18.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '1.18.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '1.19.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '1.19.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '1.19.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '1.19.0-coq-8.19'
  repo: 'mathcomp/mathcomp'
- version: '2.0.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '2.0.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '2.0.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '2.1.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '2.1.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '2.1.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '2.2.0-coq-8.16'
  repo: 'mathcomp/mathcomp'
- version: '2.2.0-coq-8.17'
  repo: 'mathcomp/mathcomp'
- version: '2.2.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '2.2.0-coq-8.19'
  repo: 'mathcomp/mathcomp'
- version: '2.2.0-coq-8.20'
  repo: 'mathcomp/mathcomp'
- version: '2.3.0-coq-8.18'
  repo: 'mathcomp/mathcomp'
- version: '2.3.0-coq-8.19'
  repo: 'mathcomp/mathcomp'
- version: '2.3.0-coq-8.20'
  repo: 'mathcomp/mathcomp'
- version: '2.4.0-coq-8.20'
  repo: 'mathcomp/mathcomp'
- version: '2.4.0-rocq-prover-9.0'
  repo: 'mathcomp/mathcomp'
- version: '2.4.0-rocq-prover-dev'
  repo: 'mathcomp/mathcomp'
- version: 'coq-8.20'
  repo: 'mathcomp/mathcomp-dev'
- version: 'rocq-prover-9.0'
  repo: 'mathcomp/mathcomp-dev'
- version: 'rocq-prover-dev'
  repo: 'mathcomp/mathcomp-dev'

dependencies:
- opam:
    name: coq-mathcomp-ssreflect
    version: '{>= "1.13.0"}'
  description: |-
    [MathComp](https://math-comp.github.io) 1.13.0 or later
- opam:
    name: coq-paramcoq
    version: '{>= "1.1.3"}'
  description: |-
    [Paramcoq](https://github.com/coq-community/paramcoq) 1.1.3 or later
- opam:
    name: coq-mathcomp-zify
    version: '{with-test}'
  description: |-
    [Mczify](https://github.com/math-comp/mczify) (required only for the test suite)
- opam:
    name: coq-equations
    version: '{with-test}'
  description: |-
    [Equations](https://github.com/mattam82/Coq-Equations) (required only for the test suite)

test_target: build-misc
namespace: stablesort

action_appendix: |2-
            export: 'OPAMWITHTEST'
          env:
            OPAMWITHTEST: true

build: |-
  ## Building and installation instructions
  The easiest way to install the development version of Stable sort algorithms in Rocq
  is via [OPAM](https://opam.ocaml.org/doc/Install.html):
  ``` shell
  git clone https://github.com/pi8027/stablesort.git
  cd stablesort
  opam repo add rocq-released https://rocq-prover.org/opam/released
  opam install ./coq-stablesort.opam
  ```

documentation: |-
  ## Credits
  The mergesort functions and the stability proofs provided in this library are
  mostly based on ones in the `path` library of Mathematical Components.
---
